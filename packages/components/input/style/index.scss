@use "sass:map";

@use "../../_styles/core/mixins" as *;
@use "../../_styles/common/var" as *;
@use "../../_styles/core/css-var" as *;
@use "../../_styles/core/function" as *;
@use "../../_styles/core/config" as *;

@include b(input) {
  @include set-component-css-var("input", $input);
}

@include b(textarea) {
  @include set-component-css-var("input", $input);
}

@include b(input) {
  width: getCssVar("input-width");
  display: inline-flex;
  align-items: center;
  background-color: getCssVar("input-bg-color");
  border: 1px solid getCssVar("input-border-color");
  border-radius: getCssVar("input-border-radius");
  font-size: getCssVar("font-size", "base");
  height: map.get($common-component-size, "default");
  padding: 0 12px;
  box-sizing: border-box;
  position: relative;
  transition: border 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
  cursor: text;

  &:hover {
    border-color: getCssVar("input-hover-border-color");
  }

  // 波浪效果
  @include when(focus) {
    border-color: getCssVar("input-focus-border-color");
    // 波浪效果
    .#{$namespace}-base-wave {
      box-shadow: 0 0 0 3px getCssVar("input-ripple-color");
      transition: box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
  }

  @include when(disabled) {
    cursor: not-allowed;
    background-color: getCssVar("input-disabled-bg-color");
    &:hover {
      border-color: getCssVar("color-info", "light-6");
    }
    .#{$namespace}-input__inner {
      cursor: not-allowed;
    }
  }
  @include e(inner) {
    // 设置input的高度
    @include set-css-var-value("input-inner-height", calc(var(#{getCssVarName("component-size")}) - 2px));

    width: 100%;
    color: getCssVar("input-text-color");
    font-size: inherit;
    font-weight: 400;
    flex-grow: 1;
    height: getCssVar("input-inner-height");
    line-height: getCssVar("input-inner-height");
    padding: 0;
    outline: none;
    border: none;
    background: none;
    box-sizing: border-box;

    &::placeholder {
      color: getCssVarWithDefault("input-placeholder-color", map.get($input, "placeholder-color"));
    }
  }
  @include e(prefix) {
    display: inline-flex;
    white-space: nowrap;
    flex-shrink: 0;
    flex-wrap: nowrap;
    height: 100%;
    align-items: center;
    justify-content: center;
  }
  @include e(suffix) {
    display: inline-flex;
    white-space: nowrap;
    flex-shrink: 0;
    flex-wrap: nowrap;
    height: 100%;
    align-items: center;
    justify-content: center;
    .closeIcon {
      cursor: pointer;
      width: 24px;
      line-height: 24px;
      text-align: center;
      justify-content: center;
      font-size: 16px;
      color: getCssVar("input-clear-icon-color");
    }
  }

  @each $size in (large, small) {
    @include m($size) {
      height: map.get($common-component-size, $size);
      .#{$namespace}-input__inner {
        @include set-css-var-value("input-inner-height", calc(var(#{getCssVarName("component-size", $size)}) - 2px));
      }
    }
  }
}

@include b(textarea) {
  position: relative;
  display: inline-block;
  width: 100%;
  vertical-align: bottom;
  font-size: getCssVar("font-size", "base");
  border-radius: getCssVar("input-border-radius");

  @include e(inner) {
    position: relative;
    display: block;
    resize: vertical;
    padding: 5px 11px;
    line-height: 1.5;
    box-sizing: border-box;
    width: 100%;
    min-height: 52px;
    height: 52px;
    color: getCssVar("input-text-color");
    font-size: inherit;
    background-color: getCssVar("input-bg-color");
    border: 1px solid getCssVar("input-border-color");
    transition: border 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
    border-radius: inherit;
    outline: none;
    &:focus {
      border-color: getCssVar("input-focus-border-color");
    }
    &::placeholder {
      color: getCssVarWithDefault("input-placeholder-color", map.get($input, "placeholder-color"));
    }
  }

  // 波浪效果
  @include when(focus) {
    border-color: getCssVar("input-focus-border-color");
    // 波浪效果
    .#{$namespace}-base-wave {
      box-shadow: 0 0 0 3px getCssVar("input-ripple-color");
      transition: box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
  }
}
